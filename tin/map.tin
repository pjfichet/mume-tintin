#nop mume mini map

#run {python} {$mumemap/venv/bin/python -B}
#python from mumemap.map import Map
#python m = Map()
#python m.log('map.log', 3, True)
#action {^map: %1$} {#@gts{$session} #showme {%1}};
#gts;

#alias {mopen} {#python m.open('map.json')};
#alias {mclose} {#python m.close()};
#alias {mdump} {#python m.dump()};
#alias {mmove} {#python m.move("$room[dir]", "$room[id]", "$room[name]", """$room[desc]""")};
#alias {mroom} {#python m.room("$room[id]", "$room[name]", """$room[desc]""")};
#alias {mpath} {#python m.path('%1')};
#alias {mnote} {#python m.findNote("%1")};
#alias {mlabel} {#python m.findLabel("%1")};
#alias {mvnum} {#python m.findVnum("%1")};
#alais {mingredient} {#python m.findIngredient("%1")};
#alias {mplayer} {#python m.player("%1")};

#var {room[dir]} {};
#event {IAC SB GMCP Event.Moved IAC SE} {
	#var gmcpvar {%0};
	#var {room[dir]} {$gmcpvar[dir]};
};

#event {IAC SB GMCP Room.Info IAC SE} {
	#var gmcpvar {%0};
	#var {room[id]} {};
	#var {room[name]} {};
	#var {room[desc]} {};
	#foreach {*gmcpvar[%*]} {i} {
		#var {room[$i]} {$gmcpvar[$i]};
	};
	mmove;
	#var {room[dir]} {};
};


#var {session} {gts}
#event {SESSION CONNECTED} {
	#gts #var {session} {%0};
}

#event {SESSION ACTIVATED} {
	#gts #var {session} {%0};
	#if {"%0" == "python"} {#gts};
}

#event {SESSION DISCONNECTED} {
	#gts #var {session} {%0};
	#if {"%0" == "mume"} {
		#python m.close();
		#gts;
	};
};
